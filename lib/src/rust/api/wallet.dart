// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

import '../frb_generated.dart';

// These functions are ignored because they are not marked as `pub`: `get_multi_mint_wallet`, `get_or_create_seed`, `get_wallet`

// Rust type: RustOpaqueMoi<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<CdkWallet>>
abstract class CdkWallet implements RustOpaqueInterface {
  /// Add a mint to the wallet
  Future<void> addMint({required String workDir, required String mintUrl});

  /// Check if a mint quote has been paid
  Future<bool> checkMintQuoteStatus({
    required String workDir,
    required String mintUrl,
    required String quoteId,
  });

  /// Get wallet balance for a specific mint
  Future<BigInt> getBalance({required String workDir, required String mintUrl});

  /// Mint tokens after a quote has been paid
  Future<String> mintTokens({
    required String workDir,
    required String mintUrl,
    required String quoteId,
  });

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  /// Create a new wallet instance
  static Future<CdkWallet> newInstance() =>
      RustLib.instance.api.crateApiWalletCdkWalletNew();

  /// Request a mint quote from a mint
  Future<String> requestMintQuote({
    required String workDir,
    required String mintUrl,
    required BigInt amountSats,
  });
}
